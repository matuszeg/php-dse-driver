---
BatchStatement:
  comment: |-
    Batch statements are used to execute a series of simple or prepared
    statements.

    There are 3 types of batch statements:
     * `Dse::BATCH_LOGGED`   - this is the default batch type. This batch
       guarantees that either all or none of its statements will be executed.
       This behavior is achieved by writing a batch log on the coordinator,
       which slows down the execution somewhat.
     * `Dse::BATCH_UNLOGGED` - this batch will not be verified when
       executed, which makes it faster than a `LOGGED` batch, but means that
       some of its statements might fail, while others - succeed.
     * `Dse::BATCH_COUNTER`  - this batch is used for counter updates,
       which are, unlike other writes, not idempotent.

    @see Dse::BATCH_LOGGED
    @see Dse::BATCH_UNLOGGED
    @see Dse::BATCH_COUNTER
  methods:
    __construct:
      comment: Creates a new batch statement.
      params:
        type:
          comment: 'must be one of Dse::BATCH_* (default: Dse::BATCH_LOGGED).'
          type: int
    add:
      comment: |-
        Adds a statement to this batch.

        @throws Exception\InvalidArgumentException
      params:
        statement:
          comment: string or statement to add
          type: string|Statement
        arguments:
          comment: positional or named arguments (optional)
          type: array|null
      return:
        comment: self
        type: BatchStatement
...
