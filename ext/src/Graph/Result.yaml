---
Dse\Graph\Result:
  comment: |-
    Arbitrary data returned from a graph query. It can respresent several primitive types as well as composite types and graph elements.
    @see \Dse\Graph\ResultSet
  methods:
    __toString:
      comment: Gets the string representation of the contained data.
      return:
        comment: A string representation of the data.
        type: string
    count:
      comment: Gets the number of elements in the result if it is a composite types
        such as an array or object.
      return:
        comment: The number of elements.
        type: int
    rewind:
      comment: |
        Resets the internal iterator of this result if it is a composite type
        such as an array or object.
      return:
        comment: ""
        type: "null"
    current:
      comment: |
        Gets the element of the composite result at the current position of the
        iterator.
      return:
        comment: The current element.
        type: Graph\Result
    key:
      comment: |
        Gets the key of an object result at the current posistion of the
        iterator.
      return:
        comment: The current key.
        type: string
    next:
      comment: Moves the iterator to the next position if a composite result such
        as an array or object.
      return:
        comment: ""
        type: "null"
    valid:
      comment: Determines if the iterator is currently in a valid position.
      return:
        comment: |
          `true` if the current iterator position is valid.
        type: bool
    offsetExists:
      comment: |-
        Determines if an offset is contained in the result. Only valid
        for an array or object.
      params:
        offset:
          comment: An integer offset for array or a string key for objects.
          type: int|string
      return:
        comment: Returns true if the offset or key is valid.
        type: bool
    offsetGet:
      comment: Gets the value contained at an offset. Only valid for an array or object.
      params:
        offset:
          comment: The value at the offset.
          type: Graph\Result
      return:
        comment: ""
        type: mixed
    offsetSet:
      comment: Not implmented. The result is read-only.
      params:
        offset:
          comment: ""
          type: mixed
        value:
          comment: ""
          type: mixed
      return:
        comment: ""
        type: mixed
    offsetUnset:
      comment: Not implmented. The result is read-only.
      params:
        offset:
          comment: ""
          type: mixed
      return:
        comment: ""
        type: mixed
    isNull:
      comment: Determines if the result is a null value.
      return:
        comment: Returns true if the result is a null.
        type: bool
    isValue:
      comment: Determines if the result is not a composite value like an array or
        object.
      return:
        comment: Returns true if the result is not an array or object.
        type: bool
    isArray:
      comment: Determines if the result is an array.
      return:
        comment: Returns true if the result is an array.
        type: bool
    isObject:
      comment: Determines if the result is an object.
      return:
        comment: Returns true if the result is an object.
        type: bool
    asInt:
      comment: Determines if the result is a integer.
      return:
        comment: Returns true if the result is an integer.
        type: bool
    isBool:
      comment: Determines if the result is a bool.
      return:
        comment: Returns true if the result is a bool.
        type: bool
    isNumber:
      comment: Determines if the value is an integer or a double.
      return:
        comment: Returns true if the result is an integer or a double.
        type: bool
    isString:
      comment: Determines if the value is a string.
      return:
        comment: Returns true if the result is a string.
        type: bool
    asBool:
      comment: Converts the result's value to a bool.
      return:
        comment: A bool representation of the result's value.
        type: bool
    asDouble:
      comment: Converts the result's value to a double.
      return:
        comment: A double representation of the result's value.
        type: double
    asString:
      comment: Converts the result's value to a string.
      return:
        comment: A string representation of the result's value.
        type: string
    asEdge:
      comment: |-
        Converts an object result to an edge.

        @throws Exception\DomainException
      return:
        comment: A graph edge.
        type: Graph\Edge
    asPath:
      comment: |-
        Converts an object result to a path.

        @throws Exception\DomainException
      return:
        comment: A graph path.
        type: Graph\Path
    asVertex:
      comment: |-
        Converts an object result to a vertex.

        @throws Exception\DomainException
      return:
        comment: A graph vertex.
        type: Grap\Vertex
    asPoint:
      comment: |-
        Converts a string result to the point geospatial type. This
        expects the string to be in the well-known text (WKT) representation.

        @throws Exception\DomainException
      return:
        comment: A geospatial point value.
        type: Point
    asLineString:
      comment: |-
        Converts a string result to the line string geospatial type. This
        expects the string to be in the well-known text (WKT) representation.

        @throws Exception\DomainException
      return:
        comment: A geospatial line string value.
        type: LineString
    asPolygon:
      comment: |-
        Converts a string result to the polygon geospatial type. This
        expects the string to be in the well-known text (WKT) representation.

        @throws Exception\DomainException
      return:
        comment: A geospatial polygon value.
        type: Polygon
    value:
      comment: Gets the PHP value contained in the result.
      return:
        comment: The value.
        type: mixed
...
