// vim:ft=javascript

ARG_ENABLE("dse", "Enable DataStax PHP DSE extension", "no");

// Establish the minimum DSE C/C++ driver version
var minimum_major = 1;
var minimum_minor = 1;
var minimum_patch = 0;
var minimum_version = minimum_major + "." + minimum_minor + "." + minimum_patch;

function compare_minimum_version(major, minor, patch) {
  // Validate major version
  if (major < minimum_major) return -1;
  if (major > minimum_major) return 1;

  // Validate minor version
  if (minor < minimum_minor) return -1;
  if (minor > minimum_minor) return 1;

  // Validate patch version
  if (patch < minimum_patch) return -1;
  if (patch > minimum_patch) return 1;

  return 0;
}

function check_dse_cpp_driver_version(header_filename) {
  // Parse the DSE C/C++ driver version from the header
  var major = 0;
  var minor = 0;
  var patch = 0;
  var contents = file_get_contents(header_filename);
  if (contents.match(new RegExp(".*DSE_VERSION_MAJOR.*(\\d+)"))) {
    major = RegExp.$1;
  }
  if (contents.match(new RegExp(".*DSE_VERSION_MINOR.*(\\d+)"))) {
    minor = RegExp.$1;
  }
  if (contents.match(new RegExp(".*DSE_VERSION_PATCH.*(\\d+)"))) {
    patch = RegExp.$1;
  }
  var version = major + "." + minor + "." + patch;

  // Ensure the DSE C/C++ driver version is valid
  if (compare_minimum_version(major, minor, patch) < 0) {
    ERROR("Invalid DSE C/C++ Driver Version (v" + version + "): v" + minimum_version + "+ is required");
  }
  MESSAGE("\tUsing DSE C/C++ driver v" + version);
}

if (PHP_DSE != "no") {
  // Allow for DataStax C/C++, libuv, and Kerberos default locations to be overridden
  ARG_WITH("dse-cpp-driver", "Where to find DSE C/C++ driver", "yes");
  ARG_WITH("libuv", "Where to find libuv libraries", "yes");
  ARG_WITH("kerberos", "Where to find kerberos libraries", "yes");

  if (CHECK_LIB("dse_static.lib", "dse", PHP_DSE_CPP_DRIVER) &&
      (PHP_CASSANDRA_CPP_DRIVER_INCLUDE = CHECK_HEADER_ADD_INCLUDE("dse/cassandra.h", "CFLAGS_DSE", PHP_DSE_CPP_DRIVER + "/include")) &&
      (PHP_DSE_CPP_DRIVER_INCLUDE = CHECK_HEADER_ADD_INCLUDE("dse.h", "CFLAGS_DSE", PHP_DSE_CPP_DRIVER + "/include"))) {
    check_dse_cpp_driver_version(PHP_DSE_CPP_DRIVER_INCLUDE + "/dse.h");
    if (CHECK_LIB("libuv.lib", "dse", PHP_LIBUV) &&
        CHECK_LIB("iphlpapi.lib", "dse") &&
        CHECK_LIB("psapi.lib", "dse") &&
        CHECK_LIB("userenv.lib", "dse") && // Required for libuv v1.6.0+
        CHECK_LIB("ws2_32.lib", "dse") &&
        CHECK_LIB("wsock32.lib", "dse") &&
        CHECK_HEADER_ADD_INCLUDE("uv.h", "CFLAGS_DSE", PHP_LIBUV + "/include")) {
      var is_kerberos_available = false;
      if (X64) {
        if (CHECK_LIB("gssapi64.lib", "dse", PHP_KERBEROS) &&
            CHECK_LIB("krb5_64.lib", "dse", PHP_KERBEROS)) {
          is_kerberos_available = true;
        }
      } else {
        if (CHECK_LIB("gssapi32.lib", "dse", PHP_KERBEROS) &&
            CHECK_LIB("krb5_32.lib", "dse", PHP_KERBEROS)) {
          is_kerberos_available = true;
        }
      }
      if (is_kerberos_available) {
        // Indicate the DataStax C/C++ driver and dependencies are available
        AC_DEFINE("HAVE_DSE_CPP_DRIVER", 1, "Have DataStax C/C++ driver");
        AC_DEFINE("HAVE_LIBUV", 1, "Have libuv");
        AC_DEFINE("HAVE_KERBEROS", 1, "Have kerberos");

        if (CHECK_LIB("libeay32.lib", "dse") && CHECK_LIB("ssleay32.lib", "dse")) {
          if (!CHECK_LIB("zlib_a.lib", "dse")) {
            WARNING("Unable to Locate zlib Library: DSE extension may not link correctly");
          }
        } else {
          ERROR("Unable to Locate OpenSSL Libraries: https://wiki.php.net/internals/windows/stepbystepbuild");
        }

        if (CHECK_LIB("mpir_a.lib", "dse") &&
          CHECK_HEADER_ADD_INCLUDE("gmp.h", "CFLAGS_DSE", PHP_GMP +  ";" + PHP_PHP_BUILD + "/include/mpir")) {
          if (ADD_EXTENSION_DEP("dse", "spl")) {
            EXTENSION("dse", "php_dse.c");

            ADD_SOURCES(configure_module_dirname + "/php-driver/ext/src",
                "Aggregate.c " +
                "BatchStatement.c " +
                "Bigint.c " +
                "Blob.c " +
                "Cluster.c " +
                "Collection.c " +
                "Column.c " +
                "Custom.c " +
                "Date.c " +
                "Decimal.c " +
                "DefaultAggregate.c " +
                "DefaultCluster.c " +
                "DefaultColumn.c " +
                "DefaultFunction.c " +
                "DefaultIndex.c " +
                "DefaultKeyspace.c " +
                "DefaultMaterializedView.c " +
                "DefaultSchema.c " +
                "DefaultSession.c " +
                "DefaultTable.c " +
                "Exception.c " +
                "ExecutionOptions.c " +
                "Float.c " +
                "Function.c " +
                "Future.c " +
                "FutureClose.c " +
                "FuturePreparedStatement.c " +
                "FutureRows.c " +
                "FutureSession.c " +
                "FutureValue.c " +
                "Index.c " +
                "Inet.c " +
                "Keyspace.c " +
                "LineString.c " +
                "Map.c " +
                "MaterializedView.c " +
                "Numeric.c " +
                "Point.c " +
                "Polygon.c " +
                "PreparedStatement.c " +
                "RetryPolicy.c " +
                "Rows.c " +
                "Schema.c " +
                "Session.c " +
                "Set.c " +
                "SimpleStatement.c " +
                "Smallint.c " +
                "SSLOptions.c " +
                "Statement.c " +
                "Table.c " +
                "Time.c " +
                "Timestamp.c " +
                "TimestampGenerator.c " +
                "Timeuuid.c " +
                "Tinyint.c " +
                "Tuple.c " +
                "Type.c " +
                "UserTypeValue.c " +
                "Uuid.c " +
                "UuidInterface.c " +
                "Value.c " +
                "Varint.c", "dse");
            ADD_SOURCES(configure_module_dirname + "/php-driver/ext/src/Cluster",
                "Builder.c " +
                "DefaultBuilder.c", "dse");
            ADD_SOURCES(configure_module_dirname + "/php-driver/ext/src/Exception",
                "AlreadyExistsException.c " +
                "AuthenticationException.c " +
                "ConfigurationException.c " +
                "DivideByZeroException.c " +
                "DomainException.c " +
                "ExecutionException.c " +
                "InvalidArgumentException.c " +
                "InvalidQueryException.c " +
                "InvalidSyntaxException.c " +
                "IsBootstrappingException.c " +
                "LogicException.c " +
                "OverloadedException.c " +
                "ProtocolException.c " +
                "RangeException.c " +
                "ReadTimeout.c " +
                "RuntimeException.c " +
                "ServerException.c " +
                "TimeoutException.c " +
                "TruncateException.c " +
                "UnauthorizedException.c " +
                "UnavailableException.c " +
                "UnpreparedException.c " +
                "ValidationException.c " +
                "WriteTimeoutException.c", "dse");
            ADD_SOURCES(configure_module_dirname + "/php-driver/ext/src/RetryPolicy",
                "DefaultPolicy.c " +
                "DowngradingConsistency.c " +
                "Fallthrough.c " +
                "Logging.c", "dse");
            ADD_SOURCES(configure_module_dirname + "/php-driver/ext/src/SSLOptions",
                "Builder.c", "dse");
            ADD_SOURCES(configure_module_dirname + "/php-driver/ext/src/TimestampGenerator",
                "Monotonic.c " +
                "ServerSide.c", "dse");
            ADD_SOURCES(configure_module_dirname + "/php-driver/ext/src/Type",
                "Collection.c " +
                "Custom.c " +
                "Map.c " +
                "Scalar.c " +
                "Set.c " +
                "Tuple.c " +
                "UserType.c", "dse");
            ADD_SOURCES(configure_module_dirname + "/php-driver/ext/util",
                "bytes.c " +
                "collections.c " +
                "consistency.c " +
                "future.c " +
                "hash.c " +
                "inet.c " +
                "math.c " +
                "ref.c " +
                "result.c " +
                "types.c " +
                "uuid_gen.c", "dse");
            ADD_SOURCES(configure_module_dirname + "/src/Cluster",
                "Builder.c", "dse");
            ADD_SOURCES(configure_module_dirname + "/src/Graph",
                "DefaultElement.c " +
                "DefaultEdge.c " +
                "DefaultPath.c " +
                "DefaultProperty.c " +
                "DefaultVertex.c " +
                "DefaultVertexProperty.c " +
                "Element.c " +
                "Edge.c " +
                "FutureResultSet.c " +
                "Options.c " +
                "Path.c " +
                "Property.c " +
                "Result.c " +
                "ResultSet.c " +
                "SimpleStatement.c " +
                "Statement.c " +
                "Vertex.c " +
                "VertexProperty.c", "dse");
            ADD_SOURCES(configure_module_dirname + "/src/Graph/Options",
                "Builder.c", "dse");

            ADD_FLAG("LDFLAGS_DSE",
                "/INCREMENTAL:NO " +
                "/LTCG " +
                "/NODEFAULTLIB:LIBCMT.LIB " +
                "/NODEFAULTLIB:LIBCMTD.LIB");
            CHECK_HEADER_ADD_INCLUDE("timelib_config.h", "CFLAGS_DSE", "ext/date/lib");
            ADD_FLAG("CFLAGS_DSE",
                "/I " + configure_module_dirname + " " +
                "/I " + PHP_DSE_CPP_DRIVER + "/include " +
                "/I " + PHP_DSE_CPP_DRIVER + "/include/dse " +
                "/I " + PHP_PHP_BUILD + "/include/dse " +
                "/I " + PHP_LIBUV + "/include " +
                "/I " + configure_module_dirname + "/src " +
                "/I " + configure_module_dirname + "/php-driver/ext " +
                "/I " + configure_module_dirname + "/php-driver/ext/src " +
                "/DCASS_STATIC " +
                "/wd4267");

            // Determine if MSVC++ stdint definitions should be disabled
            if (PHP_VERSION == "5" && PHP_MINOR_VERSION <= 4) {
              ADD_FLAG("CFLAGS_DSE",
                  "/DDISABLE_MSVC_STDINT");
            }

            // Determine if library deconfliction should occur (DEBUG)
            if (PHP_DEBUG == "yes" && VCVERS == "1700") {
              ADD_FLAG("LDFLAGS",
                  "/NODEFAULTLIB:LIBCMT.LIB " +
                  "/NODEFAULTLIB:LIBCMTD.LIB"); // This is needed for vc_build.bat
            }

            // Ensure gdi32.lib is linked for all dependency extensions
            ADD_FLAG("LIBS", "gdi32.lib"); // This is needed for vc_build.bat

            AC_DEFINE("HAVE_DSE_EXT", PHP_DSE_SHARED ? 0 : 1, "Have DataStax PHP DSE driver extension");
          } else {
            ERROR("Unable to Add Dependency SPL: This should never happen (SPL is part of PHP core)");
          }
        } else {
          ERROR("Unable to Locate MPIR (GMP) Library/Headers: https://wiki.php.net/internals/windows/stepbystepbuild");
        }
      } else {
        ERROR("Unable to Locate Kerberos Library: https://wiki.php.net/internals/windows/stepbystepbuild");
      }
    } else {
      ERROR("Unable to Locate libuv Library/Header: https://wiki.php.net/internals/windows/stepbystepbuild");
    }
  } else {
    ERROR("Unable to Locate DataStax C/C++ DSE driver Library/Header: https://wiki.php.net/internals/windows/stepbystepbuild");
  }
}
